{
  "_": {
    "postman_id": "be6c83aa-6170-43d1-a000-c296aa8c42a5"
  },
  "item": [
    {
      "id": "27e81e1b-d425-4f60-b01b-7630092e6f3f",
      "name": "/",
      "request": {
        "name": "/",
        "description": {
          "type": "text/plain"
        },
        "url": {
          "path": [
            ""
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "method": "GET"
      },
      "response": [
        {
          "_": {
            "postman_previewlanguage": "json"
          },
          "id": "d26c9606-4dca-41ea-9160-6342c85b6b1d",
          "name": "OK",
          "originalRequest": {
            "url": {
              "path": [
                ""
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"message\": \"Hello World!\"\n}",
          "cookie": []
        }
      ],
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "1fe16e84-9385-4ac0-9c70-f4fb4671404f",
            "type": "text/javascript",
            "exec": [
              "// Validate status 2xx \npm.test(\"[GET]::/ - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
              "// Validate if response header has matching content-type\npm.test(\"[GET]::/ - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
              "// Validate if response has JSON Body \npm.test(\"[GET]::/ - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
              "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"message\":{\"type\":\"string\",\"example\":\"Hello World!\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/ - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
            ]
          }
        }
      ]
    }
  ],
  "event": [],
  "variable": [
    {
      "type": "string",
      "value": "http://localhost:3000",
      "key": "baseUrl"
    }
  ],
  "info": {
    "_postman_id": "be6c83aa-6170-43d1-a000-c296aa8c42a5",
    "name": "Server API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "",
      "type": "text/plain"
    }
  }
}